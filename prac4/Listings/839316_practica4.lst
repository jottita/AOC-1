


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 AREA             codigo,CODE ; area de codigo
    3 00000000         
    4 00000000                 EXPORT           ordena
    5 00000000         
    6 00000000         ordena
    7 00000000 E52DE004        push{lr}
    8 00000004 E1A02000        mov              r2,r0       ; r2 = @T 
    9 00000008 E3A03000        mov              r3,#0       ; r3 = 0 = izq 
   10 0000000C E2414001        sub              r4,r1,#1    ; r4 = n-1 = dch
   11 00000010         
   12 00000010 E92D001C        PUSH             {r2,r3,r4}  ; empujamos t,izq,d
                                                            ch   
   13 00000014 EB000002        bl               qksort
   14 00000018 E28DD00C        add              sp,sp,#12   ; liberamos las 3 p
                                                            osiciones que hemos
                                                             pusheado
   15 0000001C E49DF004        pop{pc}
   16 00000020         
   17 00000020         
   18 00000020 EAFFFFFE 
                       fin     b                fin
   19 00000024         
   20 00000024         
   21 00000024 E92D4800 
                       qksort  push{fp,lr}
   22 00000028 E1A0B00D        mov              fp,sp
   23 0000002C E92D01FF        push{r0-r8}
   24 00000030         
   25 00000030 E59B0008        ldr              r0,[fp,#8]  ; r0 = @T
   26 00000034 E59B100C        ldr              r1,[fp,#12] ; r1 = izq = i
   27 00000038 E59B2010        ldr              r2,[fp,#16] ; r2 = dch = j
   28 0000003C E0823001        add              r3, r2,r1   ; r3 = r2+r1 
   29 00000040 E1A030A3        mov              r3, r3,LSR#1 ; r3 = r3/2
   30 00000044 E7904103        ldr              r4,[r0,r3,LSL#2] ; r4 = x = T[(
                                                            iz+de)/2]
   31 00000048 E1A07001        mov              r7,r1       ; r7 = izq
   32 0000004C E1A08002        mov              r8,r2       ; r8 = dch
   33 00000050         
   34 00000050 E7905101 
                       while   ldr              r5,[r0,r1,lsl#2] ; r5 = T[i] 
   35 00000054 E1550004        cmp              r5,r4       ; si T[i] >= x salt
                                                            amos a while2
   36 00000058 AA000001        bge              while2
   37 0000005C E2811001        add              r1,r1,#1    ; i++
   38 00000060 EAFFFFFA        b                while
   39 00000064         
   40 00000064 E7906102 
                       while2  ldr              r6,[r0,r2,lsl#2] ; r6 = T[j] 
   41 00000068 E1540006        cmp              r4,r6       ; si x(r4) >= T[j](
                                                            r6) salto a si
   42 0000006C AA000001        bge              si          ;  sino
   43 00000070 E2422001        sub              r2,r2,#1    ; j--
   44 00000074 EAFFFFFA        b                while2
   45 00000078         
   46 00000078 E1510002 
                       si      cmp              r1,r2       ; si r1 > r2 saltar
                                                             a do
   47 0000007C CA000003        bgt              do          ; sino



ARM Macro Assembler    Page 2 


   48 00000080 E7806101        str              r6,[r0,r1,lsl#2] ; r6 = T[j] --
                                                            > T[i]
   49 00000084 E7805102        str              r5,[r0,r2,lsl#2] ; r5 = T[i] --
                                                            > T[j]
   50 00000088 E2811001        add              r1,r1,#1    ; i=i+1
   51 0000008C E2422001        sub              r2,r2,#1    ; j=j-1; 
   52 00000090         
   53 00000090 E1510002 
                       do      cmp              r1,r2       ; si r1 <= r2 salto
                                                             a while
   54 00000094 DAFFFFED        ble              while
   55 00000098         
   56 00000098         rcrsv                                ; r7 = izq
   57 00000098 E1570002        cmp              r7,r2       ; si iz >= j saltas
                                                             a rcrsv2
   58 0000009C AA000003        bge              rcrsv2
   59 000000A0 E52D2004        push             {r2}
   60 000000A4 E92D0081        push             {r0,r7}     ; pasamos parametro
                                                            s por pila
   61 000000A8 EBFFFFDD        bl               qksort
   62 000000AC E28DD00C        add              sp, sp,#12  ; sacamos los param
                                                            etros de la pila
   63 000000B0         
   64 000000B0         rcrsv2                               ; r8 = dch 
   65 000000B0 E1510008        cmp              r1,r8       ; si i >= dch salto
                                                             a res
   66 000000B4 AA000002        bge              res
   67 000000B8 E92D0103        push             {r0,r1,r8}  ; pasamos parametro
                                                            s por pila
   68 000000BC EBFFFFD8        bl               qksort      ; llamada a la subc
                                                            onsulta
   69 000000C0 E28DD00C        add              sp,sp,#12
   70 000000C4         ; sacamos los parametros de la pila  
   71 000000C4         
   72 000000C4 E8BD01FF 
                       res     pop{r0-r8}
   73 000000C8 E49DB004        pop{fp}
   74 000000CC E49DF004        pop{pc}
   75 000000D0         
   76 000000D0                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\839316_practica4.d -o.\objects\839316_practica4.o -IC:\Keil_v5\ARM\RV31\
INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__
EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --list=.\listings\839316_
practica4.lst 839316_practica4.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

codigo 00000000

Symbol: codigo
   Definitions
      At line 2 in file 839316_practica4.s
   Uses
      None
Comment: codigo unused
do 00000090

Symbol: do
   Definitions
      At line 53 in file 839316_practica4.s
   Uses
      At line 47 in file 839316_practica4.s
Comment: do used once
fin 00000020

Symbol: fin
   Definitions
      At line 18 in file 839316_practica4.s
   Uses
      At line 18 in file 839316_practica4.s
Comment: fin used once
ordena 00000000

Symbol: ordena
   Definitions
      At line 6 in file 839316_practica4.s
   Uses
      At line 4 in file 839316_practica4.s
Comment: ordena used once
qksort 00000024

Symbol: qksort
   Definitions
      At line 21 in file 839316_practica4.s
   Uses
      At line 13 in file 839316_practica4.s
      At line 61 in file 839316_practica4.s
      At line 68 in file 839316_practica4.s

rcrsv 00000098

Symbol: rcrsv
   Definitions
      At line 56 in file 839316_practica4.s
   Uses
      None
Comment: rcrsv unused
rcrsv2 000000B0

Symbol: rcrsv2
   Definitions
      At line 64 in file 839316_practica4.s
   Uses
      At line 58 in file 839316_practica4.s
Comment: rcrsv2 used once
res 000000C4



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: res
   Definitions
      At line 72 in file 839316_practica4.s
   Uses
      At line 66 in file 839316_practica4.s
Comment: res used once
si 00000078

Symbol: si
   Definitions
      At line 46 in file 839316_practica4.s
   Uses
      At line 42 in file 839316_practica4.s
Comment: si used once
while 00000050

Symbol: while
   Definitions
      At line 34 in file 839316_practica4.s
   Uses
      At line 38 in file 839316_practica4.s
      At line 54 in file 839316_practica4.s

while2 00000064

Symbol: while2
   Definitions
      At line 40 in file 839316_practica4.s
   Uses
      At line 36 in file 839316_practica4.s
      At line 44 in file 839316_practica4.s

11 symbols
343 symbols in table
